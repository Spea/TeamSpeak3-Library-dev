<?php

namespace devmx\Teamspeak3\Query;

require_once dirname( __FILE__ ) . '/../../../../devmx/Teamspeak3/Query/Command.php';

/**
 * Test class for Command.
 * Generated by PHPUnit on 2011-08-29 at 18:44:03.
 */
class CommandTest extends \PHPUnit_Framework_TestCase
{

   public function testGetName() {
       $cmd = new Command('foo');
       $this->assertEquals('foo', $cmd->getName());
   }
   
   public function testGetSingleParams() {
       $cmd = new Command('foo', array('foo'=>'bar', 'asdf'=>123));
       $this->assertEquals('bar', $cmd->getParameter('foo'));
       $this->assertEquals(123, $cmd->getParameter('asdf'));
   }
   
   public function testGetArrayParams() {
       $cmd = new Command('foo', array('foo'=>array('bar',123), 'asdf'=>array(123,'foo')));
       $this->assertEquals(array('bar',123), $cmd->getParameter('foo'));
       $this->assertEquals(array(123,'foo'), $cmd->getParameter('asdf'));
       $this->assertEquals(array('foo'=>array('bar',123), 'asdf'=>array(123,'foo')), $cmd->getParameters());
   }
   
   public function testGetOption() {
       $cmd = new Command('foo', array(), array('a','b','c'));
       $this->assertTrue($cmd->optionIsSet('a'));
       $this->assertTrue($cmd->optionIsSet('b'));
       $this->assertEquals(array('a','b','c'), $cmd->getOptions());
   }
   

   public function testEquals_orderIndependence() {
        $cmd1 = new Command("foo", Array("foo" => true, "asdf" => true), Array("foo" => Array("bar"), "bar" => Array("foo")) );
         
        $cmd2 = new Command("foo", Array("asdf" => true, "foo" => true), Array("bar" => Array("foo"), "foo" => Array("bar")) );
        
        $this->assertTrue($cmd1->equals($cmd2));
             
    }
    
    public function testEquals_otherOptionName() {
        $cmd1 = new Command("foo",
                            Array("foo"=>TRUE,"asdf"=>TRUE), 
                            Array("foo"=>"bar", "bar"=>"foo"));
        
        $cmd2 = new Command("foo", 
                            Array("foo"=>TRUE, "asdfg"=>TRUE), 
                            Array("foo"=>"bar", "bar"=>"foo"));
        $this->assertFalse($cmd1->equals($cmd2));
    }
    
    
    public function testEquals_additionalOption() {
        $cmd1 = new Command("foo",
                            Array("foo"=>TRUE,"asdf"=>TRUE), 
                            Array("foo"=>"bar", "bar"=>"foo"));
        
        $cmd3 = new Command("foo", 
                            Array("foo"=>TRUE, "asdfg"=>TRUE, "asdf"=>TRUE), 
                            Array("foo"=>"bar", "bar"=>"foo"));
        
        $this->assertFalse($cmd1->equals($cmd3));
    }
}

?>
